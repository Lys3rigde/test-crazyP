{"version":3,"sources":["Components/Pagination/Pagination.jsx","Components/Search/Search.jsx","Components/Arrow/Arrow.svg","Components/Arrow/Arrow.jsx","Components/Loader/Loader.jsx","Components/String/String.jsx","Components/TableBody/TableBody.jsx","Components/Table/Table.jsx","Components/Layout/Layout.jsx","App.js","index.js"],"names":["Pagination","pages","currentPage","onNextPage","onPrevPage","isBtnNextDisabled","isBtnPrevDisabled","curPageActive","curPage","className","onClick","map","page","Search","searchValue","type","placeholder","onChange","e","Arrow","arrowDirection","src","arrow","alt","Loader","role","String","personInfo","id","firstName","lastName","email","phone","TableBody","info","Table","isLoading","sortData","useState","arrowData","setArrowData","sortArrowData","target","Layout","setInfo","setIsLoading","isLoaded","setIsLoaded","totalPages","setTotalPages","setCurPage","setIsBtnNextDisabled","setIsBtnPrevDisabled","setCurPageActive","sortDirection","setSortDirection","setArrowDirection","srchValue","setSrchValue","lastStr","firstStr","useEffect","fetch","then","response","json","data","i","push","filteredData","filter","el","toLowerCase","includes","getTotalPages","Math","ceil","length","currStrs","slice","value","sortInfo","copyInfo","concat","sort","a","b","reverse","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7eed11f7.chunk.js","sourcesContent":["export const Pagination = (\r\n  {\r\n    pages,\r\n    currentPage,\r\n    onNextPage,\r\n    onPrevPage,\r\n    isBtnNextDisabled,\r\n    isBtnPrevDisabled,\r\n    curPageActive,\r\n    curPage\r\n  }) => {\r\n  return (\r\n    <nav aria-label=\"...\">\r\n      <ul className=\"pagination\">\r\n        <li className={`${isBtnPrevDisabled} page-item`}>\r\n          <button className=\"page-link\" onClick={() => { onPrevPage() }}>Previous</button>\r\n        </li>\r\n        {\r\n          pages.map(page => {\r\n            return (\r\n              <li className={curPage === page ? `${curPageActive} page-item` : 'page-item'} key={page}>\r\n                <button className=\"page-link\" onClick={() => currentPage(page)}>\r\n                  {page}\r\n                </button>\r\n              </li>\r\n            )\r\n          })\r\n        }\r\n        <li className={`${isBtnNextDisabled} page-item`}>\r\n          <button className=\"page-link\" onClick={() => { onNextPage() }}>Next</button>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n","import './Search.css'\r\n\r\nexport const Search = ({ searchValue }) => {\r\n  return (\r\n    <div className=\"search\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter FirstName/SecondName/Email/Phone\"\r\n        className=\"search__input\"\r\n        onChange={e => { searchValue(e) }}\r\n      />\r\n    </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/Arrow.d9123632.svg\";","import arrow from './Arrow.svg';\r\nimport './Arrow.css'\r\n\r\n\r\nexport const Arrow = ({ arrowDirection }) => {\r\n  return (\r\n    <div>\r\n      <img className={arrowDirection} src={arrow} alt=\"#\" />\r\n    </div>\r\n  )\r\n}","import './Loader.css'\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div className=\"spinner-border text-primary m-5\" role=\"status\">\r\n      <span className=\"sr-only\"></span>\r\n    </div>\r\n  )\r\n}","import './String.css'\r\n\r\nexport const String = ({ personInfo }) => {\r\n  return (\r\n    <div className=\"string\">\r\n      <span className=\"string__info\">{personInfo.id}</span>\r\n      <span className=\"string__info\">{personInfo.firstName}</span >\r\n      <span className=\"string__info\">{personInfo.lastName}</span>\r\n      <span className=\"string__info\">{personInfo.email}</span>\r\n      <span className=\"string__info\">{personInfo.phone}</span>\r\n    </div >\r\n  )\r\n}","import { String } from '../String/String'\r\n\r\nexport const TableBody = ({ info }) => {\r\n  return (\r\n    <div className=\"TableBody\">\r\n      {\r\n        info.map(e => {\r\n          return <String personInfo={e} key={e.phone} />\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}","import { useState } from 'react'\r\nimport { Arrow } from '../Arrow/Arrow'\r\nimport { Loader } from '../Loader/Loader'\r\nimport { TableBody } from '../TableBody/TableBody'\r\nimport './Table.css'\r\n\r\nexport const Table = ({ info, isLoading, sortData, arrowDirection }) => {\r\n\r\n  const [arrowData, setArrowData] = useState();\r\n\r\n  const sortArrowData = target => {\r\n    sortData(target);\r\n    setArrowData(target)\r\n  }\r\n\r\n  return (\r\n    <div className=\"Table\">\r\n      <div className=\"table-head\">\r\n        <span className=\"table-head__info\" onClick={() => sortArrowData('id')}>\r\n          id{arrowData === 'id' ? <Arrow arrowDirection={arrowDirection} /> : null}\r\n        </span>\r\n        <span className=\"table-head__info\" onClick={() => sortArrowData('FirstName')}>\r\n          FirstName{arrowData === 'FirstName' ? <Arrow arrowDirection={arrowDirection} /> : null}\r\n        </span>\r\n        <span className=\"table-head__info\" onClick={() => sortArrowData('SecondName')}>\r\n          SecondName{arrowData === 'SecondName' ? <Arrow arrowDirection={arrowDirection} /> : null}\r\n        </span>\r\n        <span className=\"table-head__info\" onClick={() => sortArrowData('email')}>\r\n          email{arrowData === 'email' ? <Arrow arrowDirection={arrowDirection} /> : null}\r\n        </span>\r\n        <span className=\"table-head__info\" onClick={() => sortArrowData('phone')}>\r\n          phone{arrowData === 'phone' ? <Arrow arrowDirection={arrowDirection} /> : null}\r\n        </span>\r\n      </div>\r\n      {isLoading ? <Loader /> : <TableBody info={info} />}\r\n    </div>\r\n  )\r\n}","import { useEffect, useState } from 'react';\r\nimport { Pagination } from '../Pagination/Pagination';\r\nimport { Search } from '../Search/Search';\r\nimport { Table } from '../Table/Table';\r\nimport './Layout.css';\r\n\r\n\r\nexport const Layout = () => {\r\n\r\n  const [info, setInfo] = useState([]);\r\n  const API = 'http://www.filltext.com/?rows=231&id={number|200}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}'\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [curPage, setCurPage] = useState(1);\r\n  const [isBtnNextDisabled, setIsBtnNextDisabled] = useState('');\r\n  const [isBtnPrevDisabled, setIsBtnPrevDisabled] = useState('');\r\n  const [curPageActive, setCurPageActive] = useState('');\r\n  const [sortDirection, setSortDirection] = useState(true);\r\n  const [arrowDirection, setArrowDirection] = useState('arrow');\r\n  const [srchValue, setSrchValue] = useState('');\r\n  const maxStrs = 50;\r\n  const lastStr = curPage * maxStrs;\r\n  const firstStr = lastStr - maxStrs;\r\n\r\n  useEffect(() => {\r\n    fetch(API)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setInfo(data);\r\n        setIsLoading(false);\r\n        setIsLoaded(true);\r\n      })\r\n  }, [])\r\n\r\n  const currentPage = page => {\r\n    setCurPage(page);\r\n    setIsBtnPrevDisabled('');\r\n    setIsBtnNextDisabled('');\r\n    setCurPageActive('active');\r\n  }\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  const onNextPage = () => {\r\n    if (curPage > totalPages - 1) {\r\n      setIsBtnNextDisabled('disabled');\r\n      return;\r\n    }\r\n    setCurPage(curPage + 1);\r\n    setIsBtnPrevDisabled('')\r\n  }\r\n\r\n  const onPrevPage = () => {\r\n    if (curPage < 2) {\r\n      setIsBtnPrevDisabled('disabled');\r\n      return;\r\n    }\r\n    setCurPage(curPage - 1);\r\n    setIsBtnNextDisabled('')\r\n  }\r\n\r\n  const sortData = target => {\r\n    const copyInfo = info.concat();\r\n    let sortInfo;\r\n    if (sortDirection) {\r\n      sortInfo = copyInfo.sort(\r\n        (a, b) => { return a[target] > b[target] ? 1 : -1 }\r\n      );\r\n      setArrowDirection('arrow')\r\n    } else {\r\n      sortInfo = copyInfo.reverse(\r\n        (a, b) => { return a[target] > b[target] ? 1 : -1 }\r\n      );\r\n      setArrowDirection('arrow arrow--sort')\r\n    }\r\n    setInfo(sortInfo);\r\n    setSortDirection(!sortDirection);\r\n  }\r\n\r\n  const searchValue = e => {\r\n    setSrchValue(e.target.value.toLowerCase());\r\n  }\r\n\r\n  const getFilteredData = () => {\r\n    if (!srchValue) {\r\n      return info\r\n    }\r\n    return info.filter(\r\n      el => {\r\n        return el.firstName.toLowerCase().includes(srchValue)\r\n          || el.lastName.toLowerCase().includes(srchValue)\r\n          || el.email.toLowerCase().includes(srchValue)\r\n          || el.phone.toLowerCase().includes(srchValue);\r\n      }\r\n    )\r\n  }\r\n\r\n  const filteredData = getFilteredData();\r\n\r\n\r\n  useEffect(() => {\r\n    if (!isLoaded) {\r\n      return;\r\n    }\r\n    const getTotalPages = Math.ceil(filteredData.length / maxStrs);\r\n    setTotalPages(getTotalPages);\r\n  }, [isLoaded, info.length, filteredData]);\r\n\r\n  const currStrs = filteredData.slice(firstStr, lastStr);\r\n\r\n  return (\r\n    <div className=\"Layout\">\r\n      <Search searchValue={searchValue} />\r\n      <Table info={currStrs} isLoading={isLoading} sortData={sortData} arrowDirection={arrowDirection} />\r\n      {\r\n        isLoaded && (info.length > 50) &&\r\n        < Pagination pages={pages}\r\n          currentPage={currentPage}\r\n          onNextPage={onNextPage}\r\n          onPrevPage={onPrevPage}\r\n          isBtnNextDisabled={isBtnNextDisabled}\r\n          isBtnPrevDisabled={isBtnPrevDisabled}\r\n          curPageActive={curPageActive}\r\n          curPage={curPage}\r\n        />\r\n      }\r\n    </div>\r\n  )\r\n}","import { Layout } from './Components/Layout/Layout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}